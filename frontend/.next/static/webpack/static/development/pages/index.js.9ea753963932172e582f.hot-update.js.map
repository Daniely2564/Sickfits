{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.9ea753963932172e582f.hot-update.js","sources":["webpack:///./components/Items.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Query } from 'react-apollo'\r\nimport gql from 'graphql-tag';\r\nimport styled from 'styled-components';\r\nimport Item from './Item';\r\nimport Pagination from './Pagination'\r\nimport { perPage } from '../config';\r\n\r\nconst ALL_ITEMS_QUERY = gql`\r\n  query ALL_ITEMS_QUERY ($skip: Int = 0, $first: Int = ${perPage}) {\r\n    items(first: $first, skip:$skip, orderBy: createdAt_DESC) {\r\n      id\r\n      title\r\n      price\r\n      description\r\n      image\r\n      largeImage\r\n    }  \r\n  }\r\n`;\r\n\r\nconst Center = styled.div`\r\n  text-align:center;\r\n`\r\n\r\nconst ItemsList = styled.div`\r\n  display:grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 60px;\r\n  max-width: ${props => props.theme.maxWidth};\r\n  margin:0 auto;\r\n`\r\n\r\nclass Items extends Component {\r\n  render() {\r\n    return (\r\n      <Center>\r\n        <Pagination page={this.props.page} />\r\n        <Query query={ALL_ITEMS_QUERY}>\r\n          {({ data, loading, error }) => {\r\n            if (loading) return <p>Loading...</p>\r\n            if (error) return <p>{error.message}</p>\r\n            return (\r\n              <ItemsList>\r\n                {data.items.map(item => {\r\n                  return <Item key={item.id} item={item} />\r\n                })}\r\n              </ItemsList>)\r\n          }}\r\n        </Query>\r\n        <Pagination page={this.props.page} />\r\n      </Center>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Items;\r\nexport { ALL_ITEMS_QUERY }"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAaA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAGA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AApBA;AACA;AAsBA;;;;;A","sourceRoot":""}